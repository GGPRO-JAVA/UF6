import{_ as i,c as a,o as r,a4 as s}from"./chunks/framework.hPoXimdX.js";const m=JSON.parse('{"title":"Objectius","description":"","frontmatter":{},"headers":[],"relativePath":"objectius.md","filePath":"objectius.md"}'),t={name:"objectius.md"};function l(o,e,c,n,d,u){return r(),a("div",null,e[0]||(e[0]=[s('<h1 id="objectius" tabindex="-1">Objectius <a class="header-anchor" href="#objectius" aria-label="Permalink to &quot;Objectius&quot;">​</a></h1><ul><li>Entendre el concepte de funció (subprograma) i els avantatges de descompondre un problema en mòduls autònoms.</li><li>Conèixer l’estructura d’una funció en Java: modificadors, tipus de retorn, nom, llista de paràmetres i cos.</li><li>Saber declarar funcions dins d’una classe (fora del <code>main</code>) i reconèixer el <code>main</code> com a funció d’entrada del programa.</li><li>Aprendre a invocar funcions des de qualsevol altre mètode, passar-hi arguments i, si escau, recollir el valor retornat.</li><li>Comprendre l’àmbit (visibilitat) de les variables locals i per què cada funció gestiona les seves pròpies variables.</li><li>Distingir el pas de paràmetres per valor (tipus primitius) i per referència (arrays, objectes) i les seves implicacions.</li><li>Practicar l’ús de la instrucció <code>return</code> per retornar valors de tipus primitiu o referencial.</li><li>Introduir els fonaments de la recursivitat: cas base, cas recursiu i tipus de recursivitat (directa, indirecta, en cua).</li><li>Comparar solucions iteratives i recursives dels mateixos problemes, valorant eficiència i llegibilitat.</li></ul>',2)]))}const b=i(t,[["render",l]]);export{m as __pageData,b as default};
