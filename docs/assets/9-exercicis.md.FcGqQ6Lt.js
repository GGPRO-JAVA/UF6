import{_ as e,c as l,o as t,a4 as i,j as s,a as n}from"./chunks/framework.hPoXimdX.js";const p="/UF6/uf6/triangle_a.jpg",r="/UF6/uf6/eixida_recur_2.jpg",h="/UF6/uf6/eixida_recur_3.jpg",k="/UF6/uf6/eixida_recur_4.jpg",d="/UF6/uf6/eixida_recur_5.jpg",c="/UF6/uf6/paquet_mates.jpg",D=JSON.parse('{"title":"1. FUNCIONS","description":"","frontmatter":{},"headers":[],"relativePath":"9-exercicis.md","filePath":"9-exercicis.md"}'),o={name:"9-exercicis.md"};function u(g,a,E,m,y,A){return t(),l("div",null,a[0]||(a[0]=[i(`<h1 id="_1-funcions" tabindex="-1">1. FUNCIONS <a class="header-anchor" href="#_1-funcions" aria-label="Permalink to &quot;1. FUNCIONS&quot;">​</a></h1><h2 id="_1-1-funcions-nivell-a" tabindex="-1">1.1. Funcions - Nivell A <a class="header-anchor" href="#_1-1-funcions-nivell-a" aria-label="Permalink to &quot;1.1. Funcions - Nivell A&quot;">​</a></h2><p>Nota: Cap funció mostrarà res per pantalla llevat que es diga el contrari.</p><ol><li>Escriu un programa que demane dos nombres reals per teclat i mostre per pantalla el resultat de multiplicar-los. Implementa i utilitza la funció:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna la multiplicació de dos números.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> multiplica</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b)</span></span></code></pre></div><ol start="2"><li>Escriu un programa que demane l&#39;edat per teclat i mostre per pantalla si eres major d&#39;edat o no. Implementa i utilitza la funció:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna vertader si a&gt;=18, fals en cas contrari</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> esMajorEdat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a)</span></span></code></pre></div><ol start="3"><li>Escriu un programa que demane dos nombres enters per teclat i mostre per pantalla com és el mínim. Implementa i utilitza la funció:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna el menor entre a i b</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> minim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b)</span></span></code></pre></div><ol start="4"><li>Escriu un programa que demane un nombre enter per teclat i mostre per pantalla si és positiu, negatiu o zero. Implementa i utilitza la funció:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna -1 si es negatiu, 0 si es sigual a 0 , 1 si es positiu</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dimeSigne</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a)</span></span></code></pre></div><ol start="5"><li>Escriu un programa que demane un valor sencer en milles i mostre el seu equivalent en quilòmetres. Recorda que una milla són 1,60934 quilòmetres. Implementa i utilitza la funció:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna la conversió de milles a quilòmetres</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> milles_a_quilometres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> milles)</span></span></code></pre></div><ol start="6"><li>Escriu un programa que demane cinc preus i mostre per pantalla el preu de venda de cadascun després d’aplicar-li un 21% d&#39;IVA. Implementa i utilitza la funció:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna el preu després de sumar-li un 21% d&#39;IVA</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> preuAmbIVA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> preu)</span></span></code></pre></div><ol start="7"><li>Escriu un programa que demane l&#39;ample i alt d&#39;un rectangle i mostre per pantalla la seua àrea i el seu perímetre. Implementa i utilitza les funcions:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna el perímetre</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> perimetreRectangul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ample, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alt)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna l&#39;àrea</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> areaRectangul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ample, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alt)</span></span></code></pre></div><ol start="8"><li>Escriu un programa que demane un valor N sencer i després mostre: el sumatori des d’1 a N, el productori d&#39;1 a N i el valor intermedi entre 1 i N. Implementa i utilitza les funcions:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna la suma d&#39;enters d&#39;1 a n</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> suma1aN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna el producte d&#39;enters d&#39;1 a n</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> producte1aN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna el valor intermedi entre 1 i n</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> intermedi1aN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n)</span></span></code></pre></div><h2 id="_1-2-funcions-nivell-b" tabindex="-1">1.2. Funcions - Nivell B <a class="header-anchor" href="#_1-2-funcions-nivell-b" aria-label="Permalink to &quot;1.2. Funcions - Nivell B&quot;">​</a></h2><ol start="9"><li>Realitza un programa que demane introduir tres valors sencers i ens diga quin d&#39;ells és el més elevat. Implementa-ho creant únicament una funció a la qual li passem dos valors (no tres) i ens retorne el màxim dels dos valors.</li><li>Realitza un programa que llija una data introduint el dia, mes i any per separat i ens diga si la data és correcta o no. Suposarem que tots els mesos tenen 30 dies. S&#39;ha de crear una funció on li passem les dades i retorne si és correcta o no.</li><li>Realitza un programa que escriga la taula de multiplicar d&#39;un número introduït per teclat. Per a això implementa una funció que reba com a paràmetre un nombre enter i mostre per pantalla la taula de multiplicar d&#39;aquest número.</li><li>Realitza un programa que donat un valor en quilòmetres ens el tradueix a milles. El programa ha de tindre una funció que reba com a paràmetre una quantitat en quilòmetres i ens la retorne en milles.</li><li>Realitza un programa que calcule el percentatge de descompte que ens han fet en comprar alguna cosa. S&#39;ha de sol·licitar la quantitat sense descompte i la quantitat amb el descompte aplicat. S’ha de crear una funció a la qual li passem tots dos valors i ens retorne el descompte.</li><li>Escriu una funció que mostre per pantalla un triangle com el de l&#39;exemple. Haurà de rebre dos paràmetres: el caràcter que es desitja imprimir i el nombre de línies del triangle.</li></ol><p><img src="`+p+`" alt="Triangle a"></p><ol start="15"><li>Escriu un programa que cree un array de grandària 100 amb els primers 100 nombres naturals. Després mostra la suma total i la mitjana. Implementa una funció que calcule la suma d&#39;un array i una altra que calcule la mitjana d&#39;un array.</li><li>Escriu un programa que cree un array de la grandària indicada per teclat i després l&#39;emplene amb valors aleatoris (utilitza Math.random()). Implementa la funció que emplena un array amb valors aleatoris.</li></ol><h2 id="_1-3-funcions-nivell-c" tabindex="-1">1.3. Funcions - Nivell C <a class="header-anchor" href="#_1-3-funcions-nivell-c" aria-label="Permalink to &quot;1.3. Funcions - Nivell C&quot;">​</a></h2><ol start="17"><li>Realitza un programa que ens demane número sencers fins que s&#39;introduïsca el 0, dient-nos, per a cada número introduït si és cosí o no. Cal recordar que un número és cosí si és divisible per si mateix i per 1. L&#39;1 no és cosí per conveni. S&#39;ha de crear una funció que passant-li un nombre enter retorne si és cosí o no.</li><li>El NIF (o lletra associada a un DNI) s&#39;obté de la següent manera: Es divideix el número de DNI entre 23 i la resta és codificada per una lletra segons la següent equivalència:<br> 0: &quot;T&quot;, 1: &quot;R&quot;, 2: &quot;W&quot;, 3: &quot;A&quot;, 4: &quot;G&quot;, 5: &quot;M&quot;, 6: &quot;I&quot;, 7: &quot;F&quot;, 8: &quot;P&quot;, 9: &quot;D&quot;, 10:&quot;X&quot;, 11: &quot;B&quot;, 12: &quot;N&quot;, 13: &quot;J&quot;, 14: &quot;Z&quot;, 15: &quot;S&quot;, 16: &quot;Q&quot;, 17: &quot;V&quot;, 18: &quot;H&quot;, 19: &quot;L&quot;, 20: &quot;C&quot;, 21: &quot;K&quot;, 22: &quot;E ..&quot;<br> Escriu un programa que demane el DNI i mostre per pantalla la lletra associada. Per a això s&#39;haurà de crear una funció a la qual se li passe el número i retorne la lletra.</li></ol><p>Exemple: per al DNI 56321122 el NIF és ‘X’.</p><ol start="19"><li>Realitza un programa que permeta comprovar si una terna de valors sencers (3 valors) s&#39;ajusta a l&#39;equació de Pitàgores: x ² + i ² = z ². El programa sol·licita a l&#39;usuari els valores x, i, z. S&#39;haurà de crear una funció a la qual se li passe x, i, z i retorne si són iguals o no.</li></ol><p>Per exemple: 3 ² + 4 ² = 5 ².</p><ol start="20"><li>Escriu un programa que imprisca les taules de multiplicar de l&#39;1 al 10. Implementa una funció que reba un nombre enter com a paràmetre i imprimisca la seua taula de multiplicar.</li><li>Escriu un programa que mostre un menú amb 2 opcions: “1.Circumferència” i “2.Àrea”.<br> En ambdues se li demanarà a l&#39;usuari que introduïsca un radi i després se li mostrarà el càlcul oportú. Implementa les funcions:</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Mostra el menú i retorna el número triat</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> demanaRadi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Demana que s&#39;introduïsca el radi i el retorna</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> circumferencia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Calcula la circumferència i la retorna</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> area</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Calcula l&#39;àrea i la retorna</span></span></code></pre></div><p>Modifica el programa afegint una altra opció anomenada “Volum”, permetent que l&#39;usuari també puga sol·licitar el càlcul del volum. Afig la funció:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> volum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Calcula el volum i el retorna</span></span></code></pre></div><p>Modifica el programa afegint una altra opció anomenada “Totes” en la qual es demane el radi una sola vegada i es mostren els tres càlculs possibles (circumferència, àrea i volum).</p><p>Modifica el programa anterior de manera que el procés es repetisca una vegada i una altra (mostrar menú → realitzar el càlcul → tornar a mostrar menú). Afig una opció més anomenada “Eixir” que acabarà el programa si és triada.</p><h2 id="_2-recursivitat" tabindex="-1">2. RECURSIVITAT <a class="header-anchor" href="#_2-recursivitat" aria-label="Permalink to &quot;2. RECURSIVITAT&quot;">​</a></h2><h2 id="_2-1-recursivitat-nivell-a" tabindex="-1">2.1. Recursivitat - Nivell A <a class="header-anchor" href="#_2-1-recursivitat-nivell-a" aria-label="Permalink to &quot;2.1. Recursivitat - Nivell A&quot;">​</a></h2><ol><li>Crea un programa que determini si una frase introduïda per l&#39;usuari és un palíndrom utilitzant la recursivitat. Per exemple, &quot;Mulla la llum&quot; és un palíndrom.</li><li>Desenvolupa un programa que utilitzi la recursivitat per calcular el MCD de dos nombres enters. Per exemple, el MCD de 15 i 25 és 5. <img src="`+r+'" alt="Eixida exercici 2 recursivitat"></li></ol><h2 id="_2-2-recursivitat-nivell-b" tabindex="-1">2.2. Recursivitat - Nivell B <a class="header-anchor" href="#_2-2-recursivitat-nivell-b" aria-label="Permalink to &quot;2.2. Recursivitat - Nivell B&quot;">​</a></h2><ol start="3"><li>Implementa un programa que utilitzi la recursivitat per generar totes les combinacions possibles de N elements. Per exemple, amb els elements [A, B, C], les combinacions serien [A, B], [A, C], [B, C], etc. <img src="'+h+'" alt="Eixida exercici 2 recursivitat"></li></ol><p>Así tens una descripció pas a pas de l&#39;execució:<br><strong>Primera crida (índex 0):</strong></p>',40),s("ol",null,[s("li",null,[n("Cas SENSE A "),s("ul",null,[s("li",null,"Recursió amb índex = 1, combinació = {}")])]),s("li",null,[n("Cas AMB A "),s("ul",null,[s("li",{A:""},"Afegeix A a la combinació ="),s("li",{A:""},"Recursió amb índex = 1 i combinació =")])])],-1),i(`<p><strong>Segona crida (índex 1):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. De la branca SENSE A</span></span>
<span class="line"><span>   - Cas SENSE B</span></span>
<span class="line"><span>     - Recursió amb índex = 2, combinació = {}</span></span>
<span class="line"><span>   - Cas AMB B</span></span>
<span class="line"><span>     - Afegeix B, combinació = {B}</span></span>
<span class="line"><span>     - Recursió amb índex = 2, combinació = {B}</span></span>
<span class="line"><span>   1. De la branca AMB A</span></span>
<span class="line"><span>   - Cas SENSE B</span></span>
<span class="line"><span>     - Recursió amb índex = 2, combinació = {A}</span></span>
<span class="line"><span>   - Cas AMB B</span></span>
<span class="line"><span>     - Afegeix B, combinació = {A, B}</span></span>
<span class="line"><span>     - Recursió amb índex = 2, combinació = {A, B}</span></span></code></pre></div><p><strong>Tercera crida (índex 2):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. De la branca SENSE A → SENSE B</span></span>
<span class="line"><span>   - Imprimeix {}</span></span>
<span class="line"><span>   - Afegeix C → Imprimeix {C}</span></span>
<span class="line"><span>2. De la branca SENSE A → AMB B</span></span>
<span class="line"><span>   - Imprimeix {B}</span></span>
<span class="line"><span>   - Afegeix C → Imprimeix {B, C}</span></span>
<span class="line"><span>3. De la branca AMB A → SENSE B</span></span>
<span class="line"><span>   - Imprimeix {A}</span></span>
<span class="line"><span>   - Afegeix C → Imprimeix {A, C}</span></span>
<span class="line"><span>4. De la branca AMB A → AMB B</span></span>
<span class="line"><span>   - Imprimeix {A, B}</span></span>
<span class="line"><span>   - Afegeix C → Imprimeix {A, B, C}.</span></span></code></pre></div><p>I així successivament ...</p><ol start="4"><li>Implementa un programa que utilitzi la recursivitat per generar totes les permutacions d&#39;un conjunt de N elements. Per exemple, amb els elements [A, B, C], les permutacions serien [A, B, C], [A, C, B], [B, A, C], etc. <img src="`+k+`" alt="Eixida exercici 2 recursivitat"></li></ol><p>Así tens una descripció pas a pas de l&#39;execució:</p><p><strong>Primera crida (índex 0):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. Intercanvia A amb A (no canvia)</span></span>
<span class="line"><span>   - Recursió amb índex = 1 sobre {A, B, C}</span></span>
<span class="line"><span>2. Intercanvia A amb B</span></span>
<span class="line"><span>   - elements = {B, A, C}</span></span>
<span class="line"><span>   - Recursió amb índex = 1 sobre aquest array</span></span>
<span class="line"><span>3. Intercanvia A amb C</span></span>
<span class="line"><span>   - elements = {C, B, A}</span></span>
<span class="line"><span>   - Recursió amb índex = 1 sobre aquest array</span></span></code></pre></div><p><strong>Segona crida (índex 1):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. De l&#39;array {A, B, C}:</span></span>
<span class="line"><span>   - Intercanvia B amb B (no canvia)</span></span>
<span class="line"><span>     - Imprimeix {A, B, C}</span></span>
<span class="line"><span>2. De l&#39;array {B, A, C}:</span></span>
<span class="line"><span>   - Intercanvia B amb A (no canvia)</span></span>
<span class="line"><span>     - Recursió amb índex = 2 sobre {B, A, C}</span></span>
<span class="line"><span>   - Intercanvia B amb C</span></span>
<span class="line"><span>     - elements = {B, C, A}</span></span>
<span class="line"><span>     - Recursió amb índex = 2 sobre aquest array</span></span>
<span class="line"><span>3. De l&#39;array {C, B, A}:</span></span>
<span class="line"><span>   - Intercanvia B amb C (no canvia)</span></span>
<span class="line"><span>     - Recursió amb índex = 2 sobre {C, B, A}</span></span></code></pre></div><p>I així successivament ...</p><ol start="5"><li>Crea un programa que utilitzi la recursivitat per calcular de quantes maneres diferents pots arribar a una suma donada utilitzant combinacions de nombres donats. Per exemple, amb els nombres [2, 3, 4] i una suma de 7, les formes podrien ser [2, 2, 3], [3, 4], etc.</li></ol><p><img src="`+d+`" alt="Eixida exercici 2 recursivitat"></p><p>Así tens una descripció pas a pas de l&#39;execució:</p><p><strong>Primera crida (index 0):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. Cas incluint l&#39;1:</span></span>
<span class="line"><span>   - Recursió amb sumaDesitjada = 49, index = 0</span></span>
<span class="line"><span>2. Cas sense incloure l&#39;1:</span></span>
<span class="line"><span>   - Recursió amb sumaDesitjada = 50, index = 1</span></span></code></pre></div><p><strong>Segona crida (index 1):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. De branca SENSE 1:</span></span>
<span class="line"><span>   - Cas incloent el 4:</span></span>
<span class="line"><span>     - Recursió amb sumaDesitjada = 46, index = 1</span></span>
<span class="line"><span>   - Cas sense incloure el 4:</span></span>
<span class="line"><span>     - Recursió amb sumaDesitjada = 50, index = 2</span></span>
<span class="line"><span>2. De branca AMB 1:</span></span>
<span class="line"><span>   - Cas incloent el 4:</span></span>
<span class="line"><span>     - Recursió amb sumaDesitjada = 45, index = 1</span></span>
<span class="line"><span>   - Cas sense incloure el 4:</span></span>
<span class="line"><span>     - Recursió amb sumaDesitjada = 49, index = 2</span></span></code></pre></div><p><strong>Tercera crida (index 2):</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. De branca SENSE 1 → SENSE 4:</span></span>
<span class="line"><span>   - Cas incloent el 3:</span></span>
<span class="line"><span>     - Recursió amb sumaDesitjada = 47, index = 2</span></span>
<span class="line"><span>   - Cas sense incloure el 3:</span></span>
<span class="line"><span>     - Recursió amb sumaDesitjada = 50, index = 3</span></span></code></pre></div><p>I així successivament ...</p><h2 id="_3-exercici-d-amplacio" tabindex="-1">3. Exercici d&#39;amplació <a class="header-anchor" href="#_3-exercici-d-amplacio" aria-label="Permalink to &quot;3. Exercici d&#39;amplació&quot;">​</a></h2><p><strong>Creació de biblioteques de rutines mitjançant paquets</strong></p><p>Si un conjunt de funcions es vol utilitzar en diversos programes es poden agrupar per crear un paquet (package) que després s&#39;importarà des del programa que necessite aquestes funcions. Podem crear paquets específics per introduir-hi les diferents funcions, o bé es poden incloure dins de diferents fitxers en un mateix paquet.</p><p>A continuació anem a descriure un exercici per a aprendre com fer-ho creant-nos un paquet amb dos arxius diferents de funcions i en un altre paquet inclourem el programa principal que farà ús d&#39;aquestes funcions.</p><p>En aquests moments, per a l&#39;UF06 tenim creat el projecte UF06Exercicis que conté dos paquets: <strong>curs.uf06exemples</strong> i <strong>cursuf06exercicis</strong>.</p><ul><li>Dins del projecte <strong>UF06Exercicis</strong> crearem un nou paquet que anomenarem <strong>curs.uf06matematiques</strong>.</li></ul><p><img src="`+c+`" alt="Crear paquet matemàtiques"></p><ul><li><p>Dins del nou paquet creareu dos arxius (o java class): <strong>UF06Diverses.java</strong> i <strong>UF06Geometria.java</strong> dels quals a continuació descrivim el contingut.</p></li><li><p>En l’arxiu <strong>UF06Diverses</strong> creareu dos funcions de propòsit general com són la comprovació de si un numero és primer i el número de dígits que conté un número enter. És important que s’incloguen els comentaris amb les etiquetes que comencen per @ per a completar altres aspectes de l’exercici que vorem més endavant. Aquest és el codi que s’hi ha d’incloure:</p></li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* Funcions matemàtiques de propòsit general</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UF06Diverses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * FUNCIÓ: Comprova si un número enter positiu és primer o no.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> x</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> un número enter positiu</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;code&gt;true&lt;/code&gt; si el número és primer</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;code&gt;false&lt;/code&gt; en cas contrari</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> esPrimer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nPrimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nPrimer; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        nPrimer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nPrimer;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * FUNCIÓ: Retorna el número de dígits que conté un número enter</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> x</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> un número enter</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> la quantitat de dígits que conté el número</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> digits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>Per a l’arxiu <strong>UF06Geometria</strong> crearem també altres dos funcions. Aquest és el codi que hi haureu d’incloure:</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* Funcions geomètriques</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UF06Geometria</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * FUNCIÓ: Calcula el volum d&#39;un cilindre.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> r</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> radi del cilindre</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> altura del cilindre</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> volum del cilindre</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> volumCilindre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> h;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * FUNCIÓ: Calcula la longitud d&#39;una circunferència a partir del radi.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> r</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> radi de la circunferència</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> longitud de la circunferència</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> longitudCircunferencia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>Ara ja podeu començar a crear el codi del programa principal, però en aquesta ocasió ho fareu poc a poc per fer unes comprovacions que ens permetran respondre algunes qüestions.</li></ul><p>Aneu a crear el programa (arxiu o classe) <strong>UF06Exercici22.java</strong> dins del paquet curs.uf06exercicis (o on tingueu emmagatzemats la resta d’exercicis del tema).</p><p>El primer que haureu de fer és importar aquestes classes per poder utilitzar les funcions matemàtiques creades abans dins.</p><p><strong>COMPTE: Un dels estàndards que recomana Java és organitzar les importacions per orde alfabètic.</strong></p><p>Aleshores, heu d’escriure vosaltres les dos importacions de les classes que acabeu de crear, però recordeu que s’ha de citar el paquet on estan, un punt i el nom de la classe. Si no ho feu correctament vos començaran a aparèixer errors quan inclogueu les cridades a les funcions.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">..</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ;</span></span></code></pre></div><p>Finalment, importarem el mètode Scanner:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.util.Scanner;</span></span></code></pre></div><p>Ara anem a copiar una part del codi del programa principal. El que ens interessa per a aquest exercici és arribar a la línia que haureu d’escriure poc a poc en lloc de copiar.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">* Prova algunes funcions</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UF06Exercici22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Scanner entrada </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Scanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (System.in);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Prova esPrimer()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Introdueix un número enter positiu: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entrada.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>Seguidament aneu a escriure la següent instrucció (no copiar), i al mateix temps haureu de respondre a les qüestions que es plantegen:</p><p>a) Què passa quan escrivim <code>if (curs.uf06matematiques.</code> en arribar al punt?</p><p>b) A què creus que és degut açò?</p><p>c) Què passa quan continuem escrivint <code>if (curs.uf06matematiques.UF06Diverses.</code> en arribar al següent punt?</p><p>d) Què hem fet en les nostres funcions per a que passe açò?</p><p>Completeu la línia (1a línia del següent codi) i còpieu la resta del codi.</p><p>Podeu fer la mateixa prova amb la resta de mètodes o funcions esborrant caràcters i reescrivint-les fins a cada punt.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (curs.uf06matematiques.UF06Diverses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esPrimer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;El &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; és primer.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;El &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; no és primer.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Prova digits()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Introdueix un número enter positiu: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entrada.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; té &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    curs.uf06matematiques.UF06Diverses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; dígits.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Prova volumCilindre()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r, h;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Càlcul del volum d&#39;un cilindre&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Introdueix el radi en metres: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entrada.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Introdueix l&#39;altura en metres: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    h </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entrada.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;El volum del cilindre és &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    curs.uf06matematiques.UF06Geometria.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volumCilindre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r, h) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; m3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>e) Aneu ara a la classe <strong>UF06Diverses</strong> i elimineu la paraula <strong>public</strong> en la declaració de la funció <strong>esPrimer</strong>. A continuació executeu el programa <strong>UF06Exercici22.java</strong>. Quin error dona? Què significa?</p><p>f) Restaureu la paraula public en la funció esPrimer i elimineu ara la paraula <strong>static</strong>. A continuació executeu el programa <strong>UF06Exercici22.java</strong>. Quin error dona? Què significa?</p><p>g) Genereu la documentació del programa <strong>UF06Exercici22.java</strong>. Açò es fa des del menú <strong>Run/Generate Javadoc</strong>.</p>`,54)]))}const b=e(o,[["render",u]]);export{D as __pageData,b as default};
